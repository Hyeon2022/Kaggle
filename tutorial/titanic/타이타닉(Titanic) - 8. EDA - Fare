이번에는 Fare에 대해서 설명드리겠습니다. 이번부터는 앞서 입력한 모듈과 데이터를 먼저 작성하고 코드를 설명하겠습니다.

 

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

plt.style.use('seaborn')
sns.set(font_scale=2.5)  #위의 두줄은 기본 적인 사항을 넣어 둔 것.

import missingno as msno #데이터셋에 채워치지 않는 null데이터를 쉽게 보여주는 것

#ignore warnings
import warnings
warnings.filterwarnings('ignore') #가끔 발생하는 경고들 무시

%matplotlib inline


df_train = pd.read_csv('../input/titanic/train.csv')
df_test = pd.read_csv('../input/titanic/test.csv')
 

이제 Fare에 관해서 설명드리겠습니다.

fig, ax = plt.subplots(1, 1, figsize = (8, 8))
g = sns.distplot(df_train['Fare'], color ='b', label = 'Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax= ax)
g = g.legend(loc ='best')

Skewness은 그래프의 비대칭성을 의미합니다. 그래가 오른쪽으로 갈 수록 -의 분포값(우측으로 기울어짐)을 가지는 것이고

왼쪽으로 갈 수록 +의 분포값(좌측으로 기울어짐)을 가지는 것을 의미합니다.

그럼 이제 치우친 skewness를 가운데로 조정하는 코드를 작성해 보겠습니다. 

 

df_train['Fare'] = df_train['Fare'].map(lambda i:np.log(i) if i > 0 else 0)

#만약 i값이 0보다 크면 log(i)를 선택하고 나머지 경우는 0으로 반환한다는 의미 입니다.
fig, ax = plt.subplots(1, 1, figsize = (8, 8))
g = sns.distplot(df_train['Fare'], color ='b', label = 'Skewness: {:.2f}'.format(df_train['Fare'].skew()), ax= ax)
g = g.legend(loc ='best')
위와 같이 코드를 작성할 수 있는데 이때 lambda를 사용하면 한줄로 코드를 작성할 수 있습니다. 즉 i가  0보다 크면 log(i)을 선택하고 나머지 경우네는 0을 선택한다는 뜻 입니다.  위와 같은 코드로 df_train['Fare'] 을 정의하면 다음과 같은 결과 값이 나오게 됩니다.
